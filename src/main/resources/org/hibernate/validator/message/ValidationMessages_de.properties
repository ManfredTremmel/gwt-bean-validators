javax.validation.constraints.AssertFalse.message=muss falsch sein
javax.validation.constraints.AssertTrue.message=muss wahr sein
javax.validation.constraints.DecimalMax.message=muss kleiner ${inclusive==true ? 'oder gleich ' : ''}{value} sein
javax.validation.constraints.DecimalMin.message=muss gr\u00F6\u00DFer ${inclusive==true ? 'oder gleich ' : ''}{value} sein
javax.validation.constraints.Digits.message=numerischer Wert au\u00DFerhalb erlaubten Wertebereichs (<{integer} Ziffern>,<{fraction} Ziffern> erwartet)
javax.validation.constraints.Future.message=muss in der Zukunft liegen
javax.validation.constraints.Max.message=muss kleiner oder gleich {value} sein
javax.validation.constraints.Min.message=muss gr\u00F6\u00DFer oder gleich {value} sein
javax.validation.constraints.NotNull.message=darf nicht null sein
javax.validation.constraints.Null.message=muss null sein
javax.validation.constraints.Past.message=muss in der Vergangenheit liegen
javax.validation.constraints.Pattern.message=muss auf Ausdruck "{regexp}" passen
javax.validation.constraints.Size.message=muss zwischen {min} und {max} liegen
javax.validation.constraints.NotBlank.message=darf nicht leer sein
javax.validation.constraints.NotEmpty.message=darf nicht leer sein

org.hibernate.validator.constraints.CreditCardNumber.message=ung\u00FCltige Kreditkartennummer
org.hibernate.validator.constraints.Currency.message=ung\u00FCltige W\u00E4hrung (erlaubte Werte: {value})
org.hibernate.validator.constraints.EAN.message=ung\u00FCltiger {type} Barcode
org.hibernate.validator.constraints.Email.message=keine g\u00FCltige E-Mail-Adresse
org.hibernate.validator.constraints.Length.message=muss zwischen {min} und {max} Zeichen lang sein
org.hibernate.validator.constraints.LuhnCheck.message=Die pr\u00FCfziffer f\u00FCr {value} ist ung\u00FCltig, Luhn Modulo 10 Checksum fehlgeschlagen
org.hibernate.validator.constraints.Mod10Check.message=Die pr\u00FCfziffer f\u00FCr {value} ist ung\u00FCltig, Modulo 10 Checksum fehlgeschlagen
org.hibernate.validator.constraints.Mod11Check.message=Die pr\u00FCfziffer f\u00FCr {value} ist ung\u00FCltig, Modulo 11 Checksum fehlgeschlagen
org.hibernate.validator.constraints.ModCheck.message=Die pr\u00FCfziffer f\u00FCr {value} ist ung\u00FCltig, {modType} Checksum fehlgeschlagen
org.hibernate.validator.constraints.ParametersScriptAssert.message=Skriptausdruck "{script}" gab nicht true zur\u00FCck
org.hibernate.validator.constraints.Range.message=muss zwischen {min} und {max} liegen
org.hibernate.validator.constraints.SafeHtml.message=k\u00F6nnte unsicheren HTML-Inhalt haben
org.hibernate.validator.constraints.ScriptAssert.message=Skriptausdruck "{script}" gab nicht true zur\u00FCck
org.hibernate.validator.constraints.URL.message=muss eine g\u00FCltige URL sein

org.hibernate.validator.constraints.br.CNPJ.message=ung\u00FCltige Brazilian corporate taxpayer registry Nummer (CNPJ)
org.hibernate.validator.constraints.br.CPF.message=ung\u00FCltige Brazilian individual taxpayer registry Nummer (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message=ung\u00FCltige Brazilian Voter ID Karten Nummer

org.hibernate.validator.constraints.pl.REGON.message=ung\u00FCltige polnische Steuerzahler-Identifikationsnummer (REGON)
org.hibernate.validator.constraints.pl.NIP.message=ung\u00FCltige Umsatzsteuer-Identifikationsnummer (NIP)
org.hibernate.validator.constraints.pl.PESEL.message=ung\u00FCltige polnische nationale Identifikationsnummer (PESEL)
