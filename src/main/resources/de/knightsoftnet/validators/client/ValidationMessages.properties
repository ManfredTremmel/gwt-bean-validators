javax.validation.constraints.AssertFalse.message=must be false
javax.validation.constraints.AssertTrue.message=must be true
javax.validation.constraints.DecimalMax.message=must be less than or equal to {value}
javax.validation.constraints.DecimalMin.message=must be greater than or equal to {value}
javax.validation.constraints.Digits.message=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message=must be in the future
javax.validation.constraints.Max.message=must be less than or equal to {value}
javax.validation.constraints.Min.message=must be greater than or equal to {value}
javax.validation.constraints.NotNull.message=may not be null
javax.validation.constraints.Null.message=must be null
javax.validation.constraints.Past.message=must be in the past
javax.validation.constraints.Pattern.message=must match "{regexp}"
javax.validation.constraints.Size.message=size must be between {min} and {max}
org.hibernate.validator.constraints.Email.message=not a well-formed email address
org.hibernate.validator.constraints.Length.message=length must be between {min} and {max}
org.hibernate.validator.constraints.NotBlank.message=may not be empty
org.hibernate.validator.constraints.NotEmpty.message=may not be empty
org.hibernate.validator.constraints.Range.message=must be between {min} and {max}
org.hibernate.validator.constraints.URL.message=must be a valid URL
org.hibernate.validator.constraints.CreditCardNumber.message=invalid credit card number
org.hibernate.validator.constraints.ScriptAssert.message=script expression "{script}" didn't evaluate to true
deKnightsoftnetValidatorsSharedValidationAgeLimitCheckMessage=you must be at least {minYears} years old
deKnightsoftnetValidatorsSharedValidationAlternateSizeMessage=size must be {size1} or {size2}
deKnightsoftnetValidatorsSharedValidationBankCountryMessage=country in {fieldBic} and {fieldIban} must match
deKnightsoftnetValidatorsSharedValidationBicMessage=format of bic is wrong
deKnightsoftnetValidatorsSharedValidationGlnMessage=checksum of GLN is wrong
deKnightsoftnetValidatorsSharedValidationGtinMessage=checksum of GTIN is wrong
deKnightsoftnetValidatorsSharedValidationGtin8Message=checksum of GTIN8 is wrong
deKnightsoftnetValidatorsSharedValidationGtin13Message=checksum of GTIN13 is wrong
deKnightsoftnetValidatorsSharedValidationIbanMessage=checksum of IBAN is wrong
deKnightsoftnetValidatorsSharedValidationIbanFormatedMessage=checksum or format of IBAN is wrong
deKnightsoftnetValidatorsSharedValidationIsbnMessage=checksum of ISBN is wrong
deKnightsoftnetValidatorsSharedValidationIsbn10Message=checksum of ISBN10 is wrong
deKnightsoftnetValidatorsSharedValidationIsbn13Message=checksum of ISBN13 is wrong
deKnightsoftnetValidatorsSharedValidationIsbnFormatedMessage=checksum or format of ISBN is wrong
deKnightsoftnetValidatorsSharedValidationIsbn10FormatedMessage=checksum or format of ISBN10 is wrong
deKnightsoftnetValidatorsSharedValidationIsbn13FormatedMessage=checksum or format of ISBN13 is wrong
deKnightsoftnetValidatorsSharedValidationIsinMessage=checksum of ISIN is wrong
deKnightsoftnetValidatorsSharedValidationLevenshteinDistanceMessage=the values of {field1} and {field2} are to similar
deKnightsoftnetValidatorsSharedValidationMustBeEqualMessage=the value must be equal
deKnightsoftnetValidatorsSharedValidationMustNotBeEqualMessage=the value must not be equal
deKnightsoftnetValidatorsSharedValidationNotEmptyAlternateIfOtherHasValueMessage=must be alternate filled if {fieldCompare} contains the entry "{valueCompare}"
deKnightsoftnetValidatorsSharedValidationNotEmptyAlternateIfOtherIsEmptyMessage=must be alternate filled if {fieldCompare} is empty
deKnightsoftnetValidatorsSharedValidationNotEmptyAlternateIfOtherIsNotEmptyMessage=must be alternate filled if {fieldCompare} is not empty
deKnightsoftnetValidatorsSharedValidationEmptyIfOtherHasValueMessage=must be empty if {fieldCompare} contains the entry "{valueCompare}"
deKnightsoftnetValidatorsSharedValidationEmptyIfOtherIsEmptyMessage=must be empty if {fieldCompare} is empty
deKnightsoftnetValidatorsSharedValidationEmptyIfOtherIsNotEmptyMessage=must be empty if {fieldCompare} is filled
deKnightsoftnetValidatorsSharedValidationNotEmptyIfOtherHasValueMessage=must not be empty if {fieldCompare} contains the entry "{valueCompare}"
deKnightsoftnetValidatorsSharedValidationNotEmptyIfOtherIsEmptyMessage=must not be empty if {fieldCompare} is empty
deKnightsoftnetValidatorsSharedValidationNotEmptyIfOtherIsNotEmptyMessage=must not be empty if {fieldCompare} is filled
deKnightsoftnetValidatorsSharedValidationPasswordMessage=must contain {minRules} of the following four character types: upper case, lower case, digits and special characters
deKnightsoftnetValidatorsSharedValidationPasswordBlacklistMessage=none of the following words is allowed inside the entry: {blacklist}
deKnightsoftnetValidatorsSharedValidationPasswordStartCharMessage=is not allowed to start with the characters: {disalowedStartChars}
deKnightsoftnetValidatorsSharedValidationPasswordMaxRepeatMessage=maximum repeat of character in a row is {maxRepeatChar}
deKnightsoftnetValidatorsSharedValidationPhoneNumberMessage=format of phone number is wrong
deKnightsoftnetValidatorsSharedValidationPostalCodeMessage=postal code format is wrong for the selected country
deKnightsoftnetValidatorsSharedValidationRegularExpressionMessage=is no valid regular expression
deKnightsoftnetValidatorsSharedValidationVatIdMessage=no valid vat registration number
