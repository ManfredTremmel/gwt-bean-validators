javax.validation.constraints.AssertFalse.message=doit \u00EAtre faux
javax.validation.constraints.AssertTrue.message=doit \u00EAtre vrai
javax.validation.constraints.DecimalMax.message=doit \u00EAtre au maximum \u00E9gal \u00E0 {value}
javax.validation.constraints.DecimalMin.message=doit \u00EAtre au minimum \u00E9gal \u00E0 {value}
javax.validation.constraints.Digits.message=valeur num\u00E9rique hors limite (<{integer} chiffres>.<{fraction} chiffres> attendu)
javax.validation.constraints.Future.message=doit \u00EAtre dans le futur
javax.validation.constraints.Max.message=doit \u00EAtre au maximum \u00E9gal \u00E0 {value}
javax.validation.constraints.Min.message=doit \u00EAtre au minimum \u00E9gal \u00E0 {value}
javax.validation.constraints.NotNull.message= ne peut pas \u00EAtre nul
javax.validation.constraints.Null.message=doit \u00EAtre nul
javax.validation.constraints.Past.message=doit \u00EAtre dans le pass\u00E9
javax.validation.constraints.Pattern.message=doit respecter "{regexp}"
javax.validation.constraints.Size.message=la taille doit \u00EAtre comprise entre {min} et {max}
javax.validation.constraints.NotBlank.message=ne peut pas \u00EAtre vide
javax.validation.constraints.NotEmpty.message=ne peut pas \u00EAtre vide

org.hibernate.validator.constraints.CreditCardNumber.message=num\u00E9ro de carte de cr\u00E9dit invalide
org.hibernate.validator.constraints.Currency.message=devise invalide (doit faire partie de {value})
org.hibernate.validator.constraints.EAN.message=code barre {type} invalide
org.hibernate.validator.constraints.Email.message=adresse email mal form\u00E9e
org.hibernate.validator.constraints.ISBN.message=ISBN invalide
org.hibernate.validator.constraints.Length.message=la longueur doit \u00EAtre comprise entre {min} et {max} caract√®res
org.hibernate.validator.constraints.LuhnCheck.message=le chiffre de contr\u00F4le pour ${validatedValue} est invalide, le contr\u00F4le Luhn Modulo 10 a \u00E9chou\u00E9
org.hibernate.validator.constraints.Mod10Check.message=le chiffre de contr\u00F4le pour ${validatedValue} est invalide, le contr\u00F4le Modulo 10 a \u00E9chou\u00E9
org.hibernate.validator.constraints.Mod11Check.message=le chiffre de contr\u00F4le pour ${validatedValue} est invalide, le contr\u00F4le Modulo 11 a \u00E9chou\u00E9
org.hibernate.validator.constraints.ModCheck.message=le chiffre de contr\u00F4le pour ${validatedValue} est invalide, le contr\u00F4le ${modType} a \u00E9chou\u00E9
org.hibernate.validator.constraints.NotBlank.message=ne peut pas \u00EAtre vide
org.hibernate.validator.constraints.NotEmpty.message=ne peut pas \u00EAtre vide
org.hibernate.validator.constraints.ParametersScriptAssert.message=le script "{script}" n'a pas \u00E9t\u00E9 \u00E9valu\u00E9 \u00E0 vrai
org.hibernate.validator.constraints.Range.message=doit \u00EAtre entre {min} et {max}
org.hibernate.validator.constraints.SafeHtml.message=peut contenir du HTML dangereux
org.hibernate.validator.constraints.ScriptAssert.message=le script "{script}" n'a pas \u00E9t\u00E9 \u00E9valu\u00E9 \u00E0 vrai
org.hibernate.validator.constraints.URL.message=URL mal form\u00E9e

org.hibernate.validator.constraints.br.CNPJ.message=num\u00E9ro d'enregistrement br\u00E9silien de soci\u00E9t\u00E9 contribuable (CNPJ) invalide
org.hibernate.validator.constraints.br.CPF.message=num\u00E9ro d'enregistrement br\u00E9silien de contribuable individuel (CPF) invalide
org.hibernate.validator.constraints.br.TituloEleitoral.message=num\u00E9ro de carte d'\u00E9lecteur br\u00E9silienne invalide
org.hibernate.validator.constraints.pl.REGON.message=num\u00E9ro d'imposition polonais (REGON) invalide
org.hibernate.validator.constraints.pl.NIP.message=num\u00E9ro d'identification de TVA polonais (NIP) invalide
org.hibernate.validator.constraints.pl.PESEL.message=num\u00E9ro d'identification national polonais (PESEL) invalide

deKnightsoftnetValidatorsSharedValidationAgeLimitCheckMessage=vous devez \u00EAtre ag\u00E9 d'au moins {minYears} ans
deKnightsoftnetValidatorsSharedValidationAlternateSizeMessage=la taille doit \u00EAtre comprise entre {size1} et {size2}
deKnightsoftnetValidatorsSharedValidationBankCountryMessage=le pays dans {fieldBic} et {fieldIban} doivent correspondre
deKnightsoftnetValidatorsSharedValidationBankCountryWrongBicMessage=BIC et IBAN ne correspondent pas
deKnightsoftnetValidatorsSharedValidationBicMessage=le format du bic est faux
deKnightsoftnetValidatorsSharedValidationGlnMessage=le checksum de GLN est faux
deKnightsoftnetValidatorsSharedValidationGtinMessage=le checksum de GTIN est faux
deKnightsoftnetValidatorsSharedValidationGtin8Message=le checksum de GTIN8 est faux
deKnightsoftnetValidatorsSharedValidationGtin13Message=le checksum de GTIN13 est faux
deKnightsoftnetValidatorsSharedValidationIbanMessage=le checksum de IBAN est faux
deKnightsoftnetValidatorsSharedValidationIbanFormatedMessage=le checksum ou le format de IBAN est faux
deKnightsoftnetValidatorsSharedValidationIsbnMessage=le checksum de ISBN est faux
deKnightsoftnetValidatorsSharedValidationIsbn10Message=le checksum de ISBN10 est faux
deKnightsoftnetValidatorsSharedValidationIsbn13Message=le checksum de ISBN13 est faux
deKnightsoftnetValidatorsSharedValidationIsbnFormatedMessage=le checksum ou le format de of ISBN est faux
deKnightsoftnetValidatorsSharedValidationIsbn10FormatedMessage=le checksum ou le format de of ISBN10 est faux
deKnightsoftnetValidatorsSharedValidationIsbn13FormatedMessage=le checksum ou le format de of ISBN13 est faux
deKnightsoftnetValidatorsSharedValidationIsinMessage=le checksum de ISIN est faux
deKnightsoftnetValidatorsSharedValidationLevenshteinDistanceMessage=les valeurs de {field1} et {field2} doivent \u00EAtre similaires
deKnightsoftnetValidatorsSharedValidationMustBeEqualMessage=la valeur doit \u00EAtre \u00E9gale
deKnightsoftnetValidatorsSharedValidationMustNotBeEqualMessage=la valeu ne doit pas \u00EAtre \u00E9gale
deKnightsoftnetValidatorsSharedValidationNotEmptyAlternateIfOtherHasValueMessage=doit \u00EAtre rempli alternativement si {fieldCompare} contient l'entr\u00E9e "{valueCompare}"
deKnightsoftnetValidatorsSharedValidationNotEmptyAlternateIfOtherIsEmptyMessage=doit \u00EAtre rempli alternativement si {fieldCompare} est vide
deKnightsoftnetValidatorsSharedValidationNotEmptyAlternateIfOtherIsNotEmptyMessage=doit \u00EAtre rempli alternativement si {fieldCompare} n'est pas vide
deKnightsoftnetValidatorsSharedValidationEmptyIfOtherHasValueMessage=doit \u00EAtre vide si {fieldCompare} contient l'entr\u00E9e "{valueCompare}"
deKnightsoftnetValidatorsSharedValidationEmptyIfOtherIsEmptyMessage=doit \u00EAtre vide si {fieldCompare} est vide
deKnightsoftnetValidatorsSharedValidationEmptyIfOtherIsNotEmptyMessage=doit \u00EAtre vide si {fieldCompare} est renseign\u00E9
deKnightsoftnetValidatorsSharedValidationNotEmptyIfOtherHasValueMessage=ne doit pas \u00EAtre vide si {fieldCompare} contient l'entr\u00E9e "{valueCompare}"
deKnightsoftnetValidatorsSharedValidationNotEmptyIfOtherIsEmptyMessage=ne doit pas \u00EAtre vide si {fieldCompare} est vide
deKnightsoftnetValidatorsSharedValidationNotEmptyIfOtherIsNotEmptyMessage=ne doit pas \u00EAtre vide si {fieldCompare} est renseign\u00E9
deKnightsoftnetValidatorsSharedValidationPasswordMessage=doit contenir {minRules} des types de caract\u00E9res suivants: majuscule, minuscule, chiffre et caract\u00E9re sp\u00E9cial
deKnightsoftnetValidatorsSharedValidationPasswordBlacklistMessage=aucun des mots suivants n'est autoris\u00E9: {blacklist}
deKnightsoftnetValidatorsSharedValidationPasswordStartCharMessage=il n'est pas permis de commencer par le caract\u00E9re: {disalowedStartChars}
deKnightsoftnetValidatorsSharedValidationPasswordMaxRepeatMessage=le maximum de r\u00E9p\u00E9tition du caract\u00E9re dans la ligne est {maxRepeatChar}
deKnightsoftnetValidatorsSharedValidationPhoneNumberMessage=le format du num\u00E9ro de t\u00E9l\u00E9phone est faux
deKnightsoftnetValidatorsSharedValidationPostalCodeMessage=le format du code postal est faux pour le pays s\u00E9l\u00E9ctionn\u00E9
deKnightsoftnetValidatorsSharedValidationRegularExpressionMessage=n'est pas une expression r\u00E9guli\u00E9re valide
deKnightsoftnetValidatorsSharedValidationTaxNumberMessage=le num\u00E9ro de taxe est invalide
deKnightsoftnetValidatorsSharedValidationTinMessage=le num\u00E9ro d'identification de taxe est invalide
deKnightsoftnetValidatorsSharedValidationVatIdMessage=le num\u00E9ro d'enregistrement TVA est invalide
deKnightsoftnetValidatorsSharedValidationLimitCharsetMessage=seul les caract\u00E9res provenant du charset {charset} sont autoris\u00E9
deKnightsoftnetValidatorsSharedValidationMustBeSmallerMessage=la valeur de {field1} doit \u00EAtre inf\u00E9rieur \u00E0 celle de {field2}
deKnightsoftnetValidatorsSharedValidationMustBeSmallerOrEqualMessage=la valeur de {field1} doit \u00EAtre inf\u00E9rieur (ou \u00E9gale) \u00E0 celle de {field2}
deKnightsoftnetValidatorsSharedValidationMustBeBiggerMessage=la valeur de {field1} doit \u00EAtre sup\u00E9rieure \u00E0 celle de {field2}
deKnightsoftnetValidatorsSharedValidationMustBeBiggerOrEqualMessage=la valeur de {field1} doit \u00EAtre sup\u00E9rieure (ou \u00E9gale) \u00E0 celle de {field2}
deKnightsoftnetValidatorsSharedValidationEmailMustHaveSameDomainMessage=les domaines des adresses emails sont diff\u00E9rent
