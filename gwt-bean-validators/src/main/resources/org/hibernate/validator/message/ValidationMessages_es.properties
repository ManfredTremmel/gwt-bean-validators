javax.validation.constraints.AssertFalse.message     = tiene que ser falso
javax.validation.constraints.AssertTrue.message      = tiene que ser verdadero
javax.validation.constraints.DecimalMax.message      = tiene que ser menor ${inclusive == true ? 'o igual que ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = tiene que ser mayor ${inclusive == true ? 'o igual que ' : ''}{value}
javax.validation.constraints.Digits.message          = valor num\u00E9rico fuera de los l\u00EDmites (se esperaba <{integer} d\u00EDgitos>.<{fraction} d\u00EDgitos)
javax.validation.constraints.Email.message           = no es una direcci\u00F3n de correo bien formada
javax.validation.constraints.Future.message          = tiene que ser una fecha en el futuro
javax.validation.constraints.FutureOrPresent.message = tiene que ser una fecha en el presente o en el futuro
javax.validation.constraints.Max.message             = tiene que ser menor o igual que {value}
javax.validation.constraints.Min.message             = tiene que ser mayor o igual que {value}
javax.validation.constraints.Negative.message        = tiene que ser menor que 0
javax.validation.constraints.NegativeOrZero.message  = tiene que ser menor o igual a 0
javax.validation.constraints.NotBlank.message        = no puede estar vac\u00EDo
javax.validation.constraints.NotEmpty.message        = no puede estar vac\u00EDo
javax.validation.constraints.NotNull.message         = no puede ser null
javax.validation.constraints.Null.message            = tiene que ser null
javax.validation.constraints.Past.message            = tiene que ser una fecha en el pasado
javax.validation.constraints.PastOrPresent.message   = tiene que ser una fecha en el pasado o en el presente
javax.validation.constraints.Pattern.message         = tiene que corresponder a la expresi\u00F3n regular "{regexp}"
javax.validation.constraints.Positive.message        = tiene que ser mayor que 0
javax.validation.constraints.PositiveOrZero.message  = tiene que ser mayor o igual a 0
javax.validation.constraints.Size.message            = el tama\u00F1o tiene que estar entre {min} y {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = n\u00FAmero de tarjeta inv\u00E1lido
org.hibernate.validator.constraints.Currency.message                = mon\u00E9da inv\u00E1lida (tiene que ser una de {value})
org.hibernate.validator.constraints.EAN.message                     = c\u00F3digo de barras {type} inv\u00E1lido
org.hibernate.validator.constraints.Email.message                   = no es una direcci\u00F3n de correo bien formada
org.hibernate.validator.constraints.ISBN.message                    = ISBN inv\u00E1lido
org.hibernate.validator.constraints.Length.message                  = la longitud tiene que estar entre {min} y {max}
org.hibernate.validator.constraints.CodePointLength.message         = la longitud tiene que estar entre {min} y {max}
org.hibernate.validator.constraints.LuhnCheck.message               = el d\u00EDgito de verificaci\u00F3n para ${validatedValue} es inv\u00E1lido, la suma de verificaci\u00F3n Luhn M\u00F3dulo 10 fall\u00F3
org.hibernate.validator.constraints.Mod10Check.message              = el d\u00EDgito de verificaci\u00F3n para ${validatedValue} es inv\u00E1lido, la suma de verificaci\u00F3n M\u00F3dulo 10 fall\u00F3
org.hibernate.validator.constraints.Mod11Check.message              = el d\u00EDgito de verificaci\u00F3n para ${validatedValue} es inv\u00E1lido, la suma de verificaci\u00F3n M\u00F3dulo 11 fall\u00F3
org.hibernate.validator.constraints.ModCheck.message                = el d\u00EDgito de verificaci\u00F3n para ${validatedValue} es inv\u00E1lido, la suma de verificaci\u00F3n ${modType} fall\u00F3
org.hibernate.validator.constraints.NotBlank.message                = no puede estar vac\u00EDo
org.hibernate.validator.constraints.NotEmpty.message                = no puede estar vac\u00EDo
org.hibernate.validator.constraints.ParametersScriptAssert.message  = la expresi\u00F3n "{script}" no se ha evaluado como verdadera
org.hibernate.validator.constraints.Range.message                   = tiene que estar entre {min} y {max}
org.hibernate.validator.constraints.SafeHtml.message                = puede tener un contenido html inseguro
org.hibernate.validator.constraints.ScriptAssert.message            = la expresi\u00F3n "{script}" no se ha evaluado como verdadera
org.hibernate.validator.constraints.UniqueElements.message          = tiene que contener elementos \u00FAnicos
org.hibernate.validator.constraints.URL.message                     = tiene que ser una URL v\u00E1lida

org.hibernate.validator.constraints.br.CNPJ.message                 = n\u00FAmero de identificaci\u00F3n tributario corporativo Brazile\u00F1o (CNPJ) inv\u00E1lido
org.hibernate.validator.constraints.br.CPF.message                  = n\u00FAmero de identificaci\u00F3n tributario individual Brazile\u00F1o (CPF) inv\u00E1lido
org.hibernate.validator.constraints.br.TituloEleitoral.message      = n\u00FAmero de identificaci\u00F3n electoral Brazile\u00F1o inv\u00E1lido

org.hibernate.validator.constraints.pl.REGON.message                = n\u00FAmero de identificaci\u00F3n tributario Polaco (REGON) inv\u00E1lido
org.hibernate.validator.constraints.pl.NIP.message                  = n\u00FAmero de identificaci\u00F3n VAT (NIP) inv\u00E1lido
org.hibernate.validator.constraints.pl.PESEL.message                = n\u00FAmero de identificaci\u00F3n nacional Polaco (PESEL) inv\u00E1lido

org.hibernate.validator.constraints.time.DurationMax.message        = tiene que durar menos {inclusive == true ? ' o igual que' : ''}${days == 0 ? '' : days == 1 ? ' 1 d\u00EDa' : ' ' += days += ' d\u00EDs'}${hours == 0 ? '' : hours == 1 ? ' 1 hora' : ' ' += hours += ' horas'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minuto' : ' ' += minutes += ' minutos'}${seconds == 0 ? '' : seconds == 1 ? ' 1 segundo' : ' ' += seconds += ' segundos'}${millis == 0 ? '' : millis == 1 ? ' 1 milisegundo' : ' ' += millis += ' milisegundos'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosegundo' : ' ' += nanos += ' nanosegundos'}
org.hibernate.validator.constraints.time.DurationMin.message        = tiene que durar mas {inclusive == true ? ' o igual que' : ''}${days == 0 ? '' : days == 1 ? ' 1 d\u00EDa' : ' ' += days += ' d\u00EDs'}${hours == 0 ? '' : hours == 1 ? ' 1 hora' : ' ' += hours += ' horas'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minuto' : ' ' += minutes += ' minutos'}${seconds == 0 ? '' : seconds == 1 ? ' 1 segundo' : ' ' += seconds += ' segundos'}${millis == 0 ? '' : millis == 1 ? ' 1 milisegundo' : ' ' += millis += ' milisegundos'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosegundo' : ' ' += nanos += ' nanosegundos'}
